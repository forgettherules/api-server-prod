{"version":3,"file":"index.test.js","sourceRoot":"","sources":["../../../../src/__tests__/e2e_extract/index.test.ts"],"names":[],"mappings":"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","sourcesContent":["import request from \"supertest\";\nimport dotenv from \"dotenv\";\nimport {\n  FirecrawlCrawlResponse,\n  FirecrawlCrawlStatusResponse,\n  FirecrawlScrapeResponse,\n} from \"../../types\";\n\ndotenv.config();\nconst TEST_URL = \"http://127.0.0.1:3002\";\n\ndescribe(\"E2E Tests for Extract API Routes\", () => {\n  it.concurrent(\"should return authors of blog posts on firecrawl.dev\", async () => {\n    const response = await request(TEST_URL)\n      .post(\"/v1/extract\")\n      .set(\"Authorization\", `Bearer ${process.env.TEST_API_KEY}`)\n      .set(\"Content-Type\", \"application/json\")\n      .send({\n        urls: [\"https://firecrawl.dev/*\"],\n        prompt: \"Who are the authors of the blog posts?\",\n        schema: {\n          type: \"object\",\n          properties: { authors: { type: \"array\", items: { type: \"string\" } } },\n        },\n      });\n\n    console.log(response.body);\n    expect(response.statusCode).toBe(200);\n    expect(response.body).toHaveProperty(\"data\");\n    expect(response.body.data).toHaveProperty(\"authors\");\n\n    let gotItRight = 0;\n    for (const author of response.body.data?.authors) {\n      if (author.includes(\"Caleb Peffer\")) gotItRight++;\n      if (author.includes(\"Gergő Móricz\")) gotItRight++;\n      if (author.includes(\"Eric Ciarla\")) gotItRight++;\n      if (author.includes(\"Nicolas Camara\")) gotItRight++;\n      if (author.includes(\"Jon\")) gotItRight++;\n      if (author.includes(\"Wendong\")) gotItRight++;\n\n    }\n\n    expect(gotItRight).toBeGreaterThan(1);\n  }, 60000);\n\n  it.concurrent(\"should return founders of firecrawl.dev (allowExternalLinks = true)\", async () => {\n    const response = await request(TEST_URL)\n      .post(\"/v1/extract\")\n      .set(\"Authorization\", `Bearer ${process.env.TEST_API_KEY}`)\n      .set(\"Content-Type\", \"application/json\")\n      .send({\n        urls: [\"firecrawl.dev/*\"],\n        prompt: \"Who are the founders of the company?\",\n        allowExternalLinks: true,\n        schema: {\n          type: \"object\",\n          properties: { founders: { type: \"array\", items: { type: \"string\" } } },\n        },\n      });\n    expect(response.statusCode).toBe(200);\n    expect(response.body).toHaveProperty(\"data\");\n    expect(response.body.data).toHaveProperty(\"founders\");\n\n    console.log(response.body.data?.founders);\n    let gotItRight = 0;\n    for (const founder of response.body.data?.founders) {\n      if (founder.includes(\"Caleb\")) gotItRight++;\n      if (founder.includes(\"Eric\")) gotItRight++;\n      if (founder.includes(\"Nicolas\")) gotItRight++;\n      if (founder.includes(\"nick\")) gotItRight++;\n      if (founder.includes(\"eric\")) gotItRight++;\n      if (founder.includes(\"jon-noronha\")) gotItRight++;\n\n    }\n\n    expect(gotItRight).toBeGreaterThanOrEqual(2);\n  }, 60000);\n\n  it.concurrent(\"should return hiring opportunities on firecrawl.dev (allowExternalLinks = true)\", async () => {\n    const response = await request(TEST_URL)\n      .post(\"/v1/extract\")\n      .set(\"Authorization\", `Bearer ${process.env.TEST_API_KEY}`)\n      .set(\"Content-Type\", \"application/json\")\n      .send({\n        urls: [\"https://firecrawl.dev/*\"],\n        prompt: \"What are they hiring for?\",\n        allowExternalLinks: true,\n        schema: {\n          type: \"array\",\n          items: {\n            type: \"string\"\n          },\n          required: [\"items\"]\n        },\n      });\n    expect(response.statusCode).toBe(200);\n    expect(response.body).toHaveProperty(\"data\");\n    console.log(response.body.data);\n\n    let gotItRight = 0;\n    for (const hiring of response.body.data?.items) {\n      if (hiring.includes(\"Developer Support Engineer\")) gotItRight++;\n      if (hiring.includes(\"Dev Ops Engineer\")) gotItRight++;\n      if (hiring.includes(\"Founding Web Automation Engineer\")) gotItRight++;\n    }\n\n    expect(gotItRight).toBeGreaterThan(2);\n  }, 60000);\n\n  it.concurrent(\"should return PCI DSS compliance for Fivetran\", async () => {\n    const response = await request(TEST_URL)\n      .post(\"/v1/extract\")\n      .set(\"Authorization\", `Bearer ${process.env.TEST_API_KEY}`)\n      .set(\"Content-Type\", \"application/json\")\n      .send({\n        urls: [\"fivetran.com/*\"],\n        prompt: \"Does Fivetran have PCI DSS compliance?\",\n        allowExternalLinks: true,\n        schema: {\n          type: \"object\",\n          properties: {\n            pciDssCompliance: { type: \"boolean\" }\n          }\n        },\n      });\n    expect(response.statusCode).toBe(200);\n    expect(response.body).toHaveProperty(\"data\");\n    expect(response.body.data?.pciDssCompliance).toBe(true);\n  }, 60000);\n\n  it.concurrent(\"should return Azure Data Connectors for Fivetran\", async () => {\n    const response = await request(TEST_URL)\n      .post(\"/v1/extract\")\n      .set(\"Authorization\", `Bearer ${process.env.TEST_API_KEY}`)\n      .set(\"Content-Type\", \"application/json\")\n      .send({\n        urls: [\"fivetran.com/*\"],\n        prompt: \"What are the Azure Data Connectors they offer?\",\n        schema: {\n          type: \"array\",\n          items: {\n            type: \"object\",\n            properties: {\n              connector: { type: \"string\" },\n              description: { type: \"string\" },\n              supportsCaptureDelete: { type: \"boolean\" }\n            }\n          }\n        }\n      })\n\n    console.log(response.body);\n    // expect(response.statusCode).toBe(200);\n    // expect(response.body).toHaveProperty(\"data\");\n    // expect(response.body.data?.pciDssCompliance).toBe(true);\n  }, 60000);\n\n  it.concurrent(\"should return Greenhouse Applicant Tracking System for Abnormal Security\", async () => {\n    const response = await request(TEST_URL)\n      .post(\"/v1/extract\")\n      .set(\"Authorization\", `Bearer ${process.env.TEST_API_KEY}`)\n      .set(\"Content-Type\", \"application/json\")\n      .send({\n        urls: [\"https://careers.abnormalsecurity.com/jobs/6119456003?gh_jid=6119456003\"],\n        prompt: \"what applicant tracking system is this company using?\",\n        schema: {\n          type: \"object\",\n          properties: {\n            isGreenhouseATS: { type: \"boolean\" },\n            answer: { type: \"string\" }\n          }\n        },\n        allowExternalLinks: true\n      })\n\n    console.log(response.body);\n    expect(response.statusCode).toBe(200);\n    expect(response.body).toHaveProperty(\"data\");\n    expect(response.body.data?.isGreenhouseATS).toBe(true);\n  }, 60000);\n\n  it.concurrent(\"should return mintlify api components\", async () => {\n    const response = await request(TEST_URL)\n      .post(\"/v1/extract\")\n      .set(\"Authorization\", `Bearer ${process.env.TEST_API_KEY}`)\n      .set(\"Content-Type\", \"application/json\")\n      .send({\n        urls: [\"https://mintlify.com/docs/*\"],\n        prompt: \"what are the 4 API components?\",\n        schema: {\n          type: \"array\",\n          items: {\n            type: \"object\",\n            properties: {\n              component: { type: \"string\" }\n            }\n          },\n          required: [\"items\"]\n        },\n        allowExternalLinks: true\n      })\n\n    console.log(response.body.data?.items);\n    expect(response.statusCode).toBe(200);\n    expect(response.body).toHaveProperty(\"data\");\n    expect(response.body.data?.items.length).toBe(4);\n    let gotItRight = 0;\n    for (const component of response.body.data?.items) {\n      if (component.component.toLowerCase().includes(\"parameter\")) gotItRight++;\n      if (component.component.toLowerCase().includes(\"response\")) gotItRight++;\n      if (component.component.toLowerCase().includes(\"expandable\")) gotItRight++;\n      if (component.component.toLowerCase().includes(\"sticky\")) gotItRight++;\n      if (component.component.toLowerCase().includes(\"examples\")) gotItRight++;\n\n    }\n    expect(gotItRight).toBeGreaterThan(2);\n  }, 60000);\n\n  it.concurrent(\"should return information about Eric Ciarla\", async () => {\n    const response = await request(TEST_URL)\n      .post(\"/v1/extract\")\n      .set(\"Authorization\", `Bearer ${process.env.TEST_API_KEY}`)\n      .set(\"Content-Type\", \"application/json\")\n      .send({\n        urls: [\"https://ericciarla.com/\"],\n        prompt: \"Who is Eric Ciarla? Where does he work? Where did he go to school?\",\n        schema: {\n          type: \"object\",\n          properties: {\n            name: { type: \"string\" },\n            work: { type: \"string\" },\n            education: { type: \"string\" }\n          },\n          required: [\"name\", \"work\", \"education\"]\n        },\n        allowExternalLinks: true\n      })\n\n    console.log(response.body.data);\n    expect(response.statusCode).toBe(200);\n    expect(response.body).toHaveProperty(\"data\");\n    expect(response.body.data?.name).toBe(\"Eric Ciarla\");\n    expect(response.body.data?.work).toBeDefined();\n    expect(response.body.data?.education).toBeDefined();\n  }, 60000);\n\n  \n\n});\n"]}