{"version":3,"file":"runWebScraper.js","sourceRoot":"","sources":["../../../src/main/runWebScraper.ts"],"names":[],"mappings":";;;AAMA,uEAA8D;AAE9D,mDAAwD;AACxD,0CAAuC;AACvC,wDAAoD;AACpD,mCAAsC;AACtC,oDAA0F;AAE1F,IAAA,qBAAY,GAAE,CAAC;AAER,KAAK,UAAU,uBAAuB,CAAC,EAC5C,GAAG,EACH,KAAK,GAIN;IACC,OAAO,CAAC,MAAM,aAAa,CAAC;QAC1B,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG;QACjB,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI;QACnB,aAAa,EAAE;YACb,GAAG,GAAG,CAAC,IAAI,CAAC,aAAa;YACzB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACvB,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC;aAC5D,CAAC,CAAA,CAAC,CAAC,EAAE,CAAC;SACR;QACD,eAAe,EAAE,GAAG,CAAC,IAAI,CAAC,eAAe;QACzC,iCAAiC;QACjC,gDAAgD;QAChD,uCAAuC;QACvC,KAAK;QACL,wBAAwB;QACxB,6CAA6C;QAC7C,6CAA6C;QAC7C,KAAK;QACL,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO;QACzB,WAAW,EAAE,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE;QAC9B,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ;QAC3B,SAAS,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,IAAI,KAAK;KACvC,CAAC,CAAC,CAAC;AACN,CAAC;AA9BD,0DA8BC;AAEM,KAAK,UAAU,aAAa,CAAC,EAClC,GAAG,EACH,IAAI,EACJ,aAAa,EACb,eAAe;AACf,aAAa;AACb,WAAW;AACX,OAAO,EACP,WAAW,EACX,QAAQ,EACR,SAAS,GAAC,KAAK,GACK;IACpB,IAAI,QAAQ,GAAkC,SAAS,CAAC;IACxD,IAAI,OAAO,GAAyB,EAAE,CAAC;IACvC,IAAI,CAAC;QACH,QAAQ,GAAG,MAAM,IAAA,qBAAS,EAAC,WAAW,EAAE,GAAG,EAAE,aAAa,EAAE,EAAE,QAAQ,EAAE,GAAG,eAAe,EAAE,CAAC,CAAC;QAC9F,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;YACtB,IAAI,QAAQ,CAAC,KAAK,YAAY,KAAK,EAAE,CAAC;gBACpC,MAAM,QAAQ,CAAC,KAAK,CAAC;YACvB,CAAC;iBAAM,CAAC;gBACN,MAAM,IAAI,KAAK,CAAC,mBAAmB,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,QAAQ,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACxM,CAAC;QACH,CAAC;QAED,IAAG,SAAS,KAAK,KAAK,EAAE,CAAC;YACvB,IAAI,iBAAiB,GAAG,CAAC,CAAC,CAAC,iCAAiC;YAC5D,IAAI,aAAa,CAAC,OAAO,EAAE,CAAC;gBAC1B,iBAAiB,GAAG,CAAC,CAAC;YACxB,CAAC;YAED,IAAA,yBAAQ,EAAC,OAAO,EAAE,SAAS,EAAE,iBAAiB,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;gBAC5D,eAAM,CAAC,KAAK,CAAC,uBAAuB,OAAO,QAAQ,iBAAiB,aAAa,KAAK,EAAE,CAAC,CAAC;gBAC1F,qEAAqE;YACvE,CAAC,CAAC,CAAC;QACL,CAAC;QAED,oDAAoD;QACpD,sCAAsC;QAEtC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;QAC3B,OAAO,QAAQ,CAAC;IAClB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,GAAG,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,CAAC,CAAC,CAAE,KAAa,CAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE1I,IAAI,QAAQ,KAAK,SAAS,EAAE,CAAC;YAC3B,OAAO;gBACL,GAAG,QAAQ;gBACX,OAAO,EAAE,KAAK;gBACd,KAAK;aACN,CAAA;QACH,CAAC;aAAM,CAAC;YACN,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,4CAA4C,CAAC,EAAE,OAAO,EAAE,CAAC;QAClG,CAAC;QACD,kBAAkB;IACpB,CAAC;YAAS,CAAC;QACT,MAAM,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAa,CAAC;QAEvH,KAAK,MAAM,MAAM,IAAI,WAAW,EAAE,CAAC;YACjC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAqD,CAAC;YACnF,4BAAY,CAAC,MAAM,CAAC,WAAW,EAAE;gBAC/B,IAAI,EAAE,QAAQ;gBACd,GAAG;gBACH,MAAM,EAAE,MAAM;gBACd,MAAM,EAAE;oBACN,OAAO,EAAE,MAAM,CAAC,KAAK,KAAK,SAAS;oBACnC,aAAa,EAAE,CAAC,MAAM,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC;oBAClF,aAAa,EAAE,CAAC,MAAM,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC;oBACnF,KAAK,EAAE,CAAC,MAAM,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC;oBACvG,UAAU,EAAE,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,SAAS;iBACjD;aACF,CAAC,CAAC;QACL,CAAC;IACH,CAAC;AACH,CAAC;AAzED,sCAyEC;AAED,MAAM,OAAO,GAAG,KAAK,EAAE,GAAQ,EAAE,MAAW,EAAE,KAAa,EAAE,IAAY,EAAE,OAA8B,EAAE,EAAE;IAC3G,IAAI,CAAC;QACH,MAAM,mBAAmB,GAAG,OAAO,CAAC,GAAG,CAAC,qBAAqB,KAAK,MAAM,CAAC;QACzE,IAAI,mBAAmB,EAAE,CAAC;YACxB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,2BAAgB;iBAC3C,IAAI,CAAC,gBAAgB,CAAC;iBACtB,MAAM,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;iBACxB,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;YAExB,IAAI,KAAK;gBAAE,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC1C,QAAQ;YACR,4BAA4B;YAC5B,qDAAqD;YACrD,aAAa;YACb,uDAAuD;YACvD,MAAM;YACN,oBAAoB;YACpB,gDAAgD;YAChD,IAAI;YACN,WAAW;YACX,UAAU;YACV,uDAAuD;YACvD,sBAAsB;YACtB,kDAAkD;YAClD,MAAM;QACN,CAAC;QACD,4BAAY,CAAC,WAAW,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;IAC7C,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,eAAM,CAAC,KAAK,CAAC,mCAAmC,KAAK,EAAE,CAAC,CAAC;IAC3D,CAAC;AACH,CAAC,CAAC","sourcesContent":["import { Job } from \"bullmq\";\nimport {\n  WebScraperOptions,\n  RunWebScraperParams,\n  RunWebScraperResult,\n} from \"../types\";\nimport { billTeam } from \"../services/billing/credit_billing\";\nimport { Document } from \"../controllers/v1/types\";\nimport { supabase_service } from \"../services/supabase\";\nimport { logger } from \"../lib/logger\";\nimport { ScrapeEvents } from \"../lib/scrape-events\";\nimport { configDotenv } from \"dotenv\";\nimport { EngineResultsTracker, scrapeURL, ScrapeUrlResponse } from \"../scraper/scrapeURL\";\nimport { Engine } from \"../scraper/scrapeURL/engines\";\nconfigDotenv();\n\nexport async function startWebScraperPipeline({\n  job,\n  token,\n}: {\n  job: Job<WebScraperOptions> & { id: string };\n  token: string;\n}) {\n  return (await runWebScraper({\n    url: job.data.url,\n    mode: job.data.mode,\n    scrapeOptions: {\n      ...job.data.scrapeOptions,\n      ...(job.data.crawl_id ? ({\n        formats: job.data.scrapeOptions.formats.concat([\"rawHtml\"]),\n      }): {}),\n    },\n    internalOptions: job.data.internalOptions,\n    // onSuccess: (result, mode) => {\n    //   logger.debug(`üêÇ Job completed ${job.id}`);\n    //   saveJob(job, result, token, mode);\n    // },\n    // onError: (error) => {\n    //   logger.error(`üêÇ Job failed ${job.id}`);\n    //   ScrapeEvents.logJobEvent(job, \"failed\");\n    // },\n    team_id: job.data.team_id,\n    bull_job_id: job.id.toString(),\n    priority: job.opts.priority,\n    is_scrape: job.data.is_scrape ?? false,\n  }));\n}\n\nexport async function runWebScraper({\n  url,\n  mode,\n  scrapeOptions,\n  internalOptions,\n  // onSuccess,\n  // onError,\n  team_id,\n  bull_job_id,\n  priority,\n  is_scrape=false,\n}: RunWebScraperParams): Promise<ScrapeUrlResponse> {\n  let response: ScrapeUrlResponse | undefined = undefined;\n  let engines: EngineResultsTracker = {};\n  try {\n    response = await scrapeURL(bull_job_id, url, scrapeOptions, { priority, ...internalOptions });\n    if (!response.success) {\n      if (response.error instanceof Error) {\n        throw response.error;\n      } else {\n        throw new Error(\"scrapeURL error: \" + (Array.isArray(response.error) ? JSON.stringify(response.error) : typeof response.error === \"object\" ? JSON.stringify({ ...response.error }) : response.error));\n      }\n    }\n\n    if(is_scrape === false) {\n      let creditsToBeBilled = 1; // Assuming 1 credit per document\n      if (scrapeOptions.extract) {\n        creditsToBeBilled = 5;\n      }\n\n      billTeam(team_id, undefined, creditsToBeBilled).catch(error => {\n        logger.error(`Failed to bill team ${team_id} for ${creditsToBeBilled} credits: ${error}`);\n        // Optionally, you could notify an admin or add to a retry queue here\n      });\n    }\n\n    // This is where the returnvalue from the job is set\n    // onSuccess(response.document, mode);\n\n    engines = response.engines;\n    return response;\n  } catch (error) {\n    engines = response !== undefined ? response.engines : ((typeof error === \"object\" && error !== null ? (error as any).results ?? {} : {}));\n\n    if (response !== undefined) {\n      return {\n        ...response,\n        success: false,\n        error,\n      }\n    } else {\n      return { success: false, error, logs: [\"no logs -- error coming from runWebScraper\"], engines };\n    }\n    // onError(error);\n  } finally {\n    const engineOrder = Object.entries(engines).sort((a, b) => a[1].startedAt - b[1].startedAt).map(x => x[0]) as Engine[];\n\n    for (const engine of engineOrder) {\n      const result = engines[engine] as Exclude<EngineResultsTracker[Engine], undefined>;\n      ScrapeEvents.insert(bull_job_id, {\n        type: \"scrape\",\n        url,\n        method: engine,\n        result: {\n          success: result.state === \"success\",\n          response_code: (result.state === \"success\" ? result.result.statusCode : undefined),\n          response_size: (result.state === \"success\" ? result.result.html.length : undefined),\n          error: (result.state === \"error\" ? result.error : result.state === \"timeout\" ? \"Timed out\" : undefined),\n          time_taken: result.finishedAt - result.startedAt,\n        },\n      });\n    }\n  }\n}\n\nconst saveJob = async (job: Job, result: any, token: string, mode: string, engines?: EngineResultsTracker) => {\n  try {\n    const useDbAuthentication = process.env.USE_DB_AUTHENTICATION === 'true';\n    if (useDbAuthentication) {\n      const { data, error } = await supabase_service\n        .from(\"firecrawl_jobs\")\n        .update({ docs: result })\n        .eq(\"job_id\", job.id);\n\n      if (error) throw new Error(error.message);\n      // try {\n      //   if (mode === \"crawl\") {\n      //     await job.moveToCompleted(null, token, false);\n      //   } else {\n      //     await job.moveToCompleted(result, token, false);\n      //   }\n      // } catch (error) {\n      //   // I think the job won't exist here anymore\n      // }\n    // } else {\n    //   try {\n    //     await job.moveToCompleted(result, token, false);\n    //   } catch (error) {\n    //     // I think the job won't exist here anymore\n    //   }\n    }\n    ScrapeEvents.logJobEvent(job, \"completed\");\n  } catch (error) {\n    logger.error(`üêÇ Failed to update job status: ${error}`);\n  }\n};\n"]}