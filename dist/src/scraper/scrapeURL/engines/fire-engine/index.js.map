{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../src/scraper/scrapeURL/engines/fire-engine/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Logger } from \"winston\";\nimport { Meta } from \"../..\";\nimport { fireEngineScrape, FireEngineScrapeRequestChromeCDP, FireEngineScrapeRequestCommon, FireEngineScrapeRequestPlaywright, FireEngineScrapeRequestTLSClient } from \"./scrape\";\nimport { EngineScrapeResult } from \"..\";\nimport { fireEngineCheckStatus, FireEngineCheckStatusSuccess, StillProcessingError } from \"./checkStatus\";\nimport { EngineError, SiteError, TimeoutError } from \"../../error\";\nimport * as Sentry from \"@sentry/node\";\nimport { Action } from \"../../../../lib/entities\";\nimport { specialtyScrapeCheck } from \"../utils/specialtyHandler\";\n\nexport const defaultTimeout = 10000;\n\n// This function does not take `Meta` on purpose. It may not access any\n// meta values to construct the request -- that must be done by the\n// `scrapeURLWithFireEngine*` functions.\nasync function performFireEngineScrape<Engine extends FireEngineScrapeRequestChromeCDP | FireEngineScrapeRequestPlaywright | FireEngineScrapeRequestTLSClient>(\n    logger: Logger,\n    request: FireEngineScrapeRequestCommon & Engine,\n    timeout = defaultTimeout,\n): Promise<FireEngineCheckStatusSuccess> {\n    const scrape = await fireEngineScrape(logger.child({ method: \"fireEngineScrape\" }), request);\n\n    const startTime = Date.now();\n    const errorLimit = 3;\n    let errors: any[] = [];\n    let status: FireEngineCheckStatusSuccess | undefined = undefined;\n\n    while (status === undefined) {\n        if (errors.length >= errorLimit) {\n            logger.error(\"Error limit hit.\", { errors });\n            throw new Error(\"Error limit hit. See e.cause.errors for errors.\", { cause: { errors } });\n        }\n\n        if (Date.now() - startTime > timeout) {\n            logger.info(\"Fire-engine was unable to scrape the page before timing out.\", { errors, timeout });\n            throw new TimeoutError(\"Fire-engine was unable to scrape the page before timing out\", { cause: { errors, timeout } });\n        }\n\n        try {\n            status = await fireEngineCheckStatus(logger.child({ method: \"fireEngineCheckStatus\" }), scrape.jobId)\n        } catch (error) {\n            if (error instanceof StillProcessingError) {\n                // nop\n            } else if (error instanceof EngineError || error instanceof SiteError) {\n                logger.debug(\"Fire-engine scrape job failed.\", { error, jobId: scrape.jobId });\n                throw error;\n            } else {\n                Sentry.captureException(error);\n                errors.push(error);\n                logger.debug(`An unexpeceted error occurred while calling checkStatus. Error counter is now at ${errors.length}.`, { error, jobId: scrape.jobId });\n            }\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, 250));\n    }\n\n    return status;\n}\n\nexport async function scrapeURLWithFireEngineChromeCDP(meta: Meta): Promise<EngineScrapeResult> {\n    const actions: Action[] = [\n        // Transform waitFor option into an action (unsupported by chrome-cdp)\n        ...(meta.options.waitFor !== 0 ? [{\n            type: \"wait\" as const,\n            milliseconds: meta.options.waitFor,\n        }] : []),\n\n        // Transform screenshot format into an action (unsupported by chrome-cdp)\n        ...(meta.options.formats.includes(\"screenshot\") || meta.options.formats.includes(\"screenshot@fullPage\") ? [{\n            type: \"screenshot\" as const,\n            fullPage: meta.options.formats.includes(\"screenshot@fullPage\"),\n        }] : []),\n\n        // Include specified actions\n        ...(meta.options.actions ?? []),\n    ];\n\n    const request: FireEngineScrapeRequestCommon & FireEngineScrapeRequestChromeCDP = {\n        url: meta.url,\n        engine: \"chrome-cdp\",\n        instantReturn: true,\n        skipTlsVerification: meta.options.skipTlsVerification,\n        headers: meta.options.headers,\n        ...(actions.length > 0 ? ({\n            actions,\n        }) : {}),\n        priority: meta.internalOptions.priority,\n        geolocation: meta.options.geolocation,\n        mobile: meta.options.mobile,\n        timeout: meta.options.timeout === undefined ? 300000 : undefined, // TODO: better timeout logic\n        // TODO: scrollXPaths\n    };\n\n    const totalWait = actions.reduce((a,x) => x.type === \"wait\" ? (x.milliseconds ?? 1000) + a : a, 0);\n\n    let response = await performFireEngineScrape(\n        meta.logger.child({ method: \"scrapeURLWithFireEngineChromeCDP/callFireEngine\", request }),\n        request,\n        meta.options.timeout !== undefined\n            ? defaultTimeout + totalWait\n            : Infinity, // TODO: better timeout handling\n    );\n\n    specialtyScrapeCheck(meta.logger.child({ method: \"scrapeURLWithFireEngineChromeCDP/specialtyScrapeCheck\" }), response.responseHeaders);\n\n    if (meta.options.formats.includes(\"screenshot\") || meta.options.formats.includes(\"screenshot@fullPage\")) {\n        meta.logger.debug(\"Transforming screenshots from actions into screenshot field\", { screenshots: response.screenshots });\n        response.screenshot = (response.screenshots ?? [])[0];\n        (response.screenshots ?? []).splice(0, 1);\n        meta.logger.debug(\"Screenshot transformation done\", { screenshots: response.screenshots, screenshot: response.screenshot });\n    }\n\n    if (!response.url) {\n        meta.logger.warn(\"Fire-engine did not return the response's URL\", { response, sourceURL: meta.url });\n    }\n\n    return {\n        url: response.url ?? meta.url,\n\n        html: response.content,\n        error: response.pageError,\n        statusCode: response.pageStatusCode,\n\n        screenshot: response.screenshot,\n        ...(actions.length > 0 ? {\n            actions: {\n                screenshots: response.screenshots ?? [],\n                scrapes: response.actionContent ?? [],\n            }\n        } : {}),\n    };\n}\n\nexport async function scrapeURLWithFireEnginePlaywright(meta: Meta): Promise<EngineScrapeResult> {\n    const request: FireEngineScrapeRequestCommon & FireEngineScrapeRequestPlaywright = {\n        url: meta.url,\n        engine: \"playwright\",\n        instantReturn: true,\n\n        headers: meta.options.headers,\n        priority: meta.internalOptions.priority,\n        screenshot: meta.options.formats.includes(\"screenshot\"),\n        fullPageScreenshot: meta.options.formats.includes(\"screenshot@fullPage\"),\n        wait: meta.options.waitFor,\n        geolocation: meta.options.geolocation,\n\n        timeout: meta.options.timeout === undefined ? 300000 : undefined, // TODO: better timeout logic\n    };\n\n    let response = await performFireEngineScrape(\n        meta.logger.child({ method: \"scrapeURLWithFireEngineChromeCDP/callFireEngine\", request }),\n        request,\n        meta.options.timeout !== undefined\n            ? defaultTimeout + meta.options.waitFor\n            : Infinity, // TODO: better timeout handling\n    );\n    \n    specialtyScrapeCheck(meta.logger.child({ method: \"scrapeURLWithFireEnginePlaywright/specialtyScrapeCheck\" }), response.responseHeaders);\n\n    if (!response.url) {\n        meta.logger.warn(\"Fire-engine did not return the response's URL\", { response, sourceURL: meta.url });\n    }\n\n    return {\n        url: response.url ?? meta.url,\n\n        html: response.content,\n        error: response.pageError,\n        statusCode: response.pageStatusCode,\n\n        ...(response.screenshots !== undefined && response.screenshots.length > 0 ? ({\n            screenshot: response.screenshots[0],\n        }) : {}),\n    };\n}\n\nexport async function scrapeURLWithFireEngineTLSClient(meta: Meta): Promise<EngineScrapeResult> {\n    const request: FireEngineScrapeRequestCommon & FireEngineScrapeRequestTLSClient = {\n        url: meta.url,\n        engine: \"tlsclient\",\n        instantReturn: true,\n\n        headers: meta.options.headers,\n        priority: meta.internalOptions.priority,\n\n        atsv: meta.internalOptions.atsv,\n        geolocation: meta.options.geolocation,\n        disableJsDom: meta.internalOptions.v0DisableJsDom,\n\n        timeout: meta.options.timeout === undefined ? 300000 : undefined, // TODO: better timeout logic\n    };\n\n    let response = await performFireEngineScrape(\n        meta.logger.child({ method: \"scrapeURLWithFireEngineChromeCDP/callFireEngine\", request }),\n        request,\n        meta.options.timeout !== undefined\n            ? defaultTimeout\n            : Infinity, // TODO: better timeout handling\n    );\n\n    specialtyScrapeCheck(meta.logger.child({ method: \"scrapeURLWithFireEngineTLSClient/specialtyScrapeCheck\" }), response.responseHeaders);\n\n    if (!response.url) {\n        meta.logger.warn(\"Fire-engine did not return the response's URL\", { response, sourceURL: meta.url });\n    }\n\n    return {\n        url: response.url ?? meta.url,\n\n        html: response.content,\n        error: response.pageError,\n        statusCode: response.pageStatusCode,\n    };\n}\n"]}