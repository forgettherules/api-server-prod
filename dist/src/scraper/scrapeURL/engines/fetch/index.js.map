{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../src/scraper/scrapeURL/engines/fetch/index.ts"],"names":[],"mappings":";;;AAEA,uCAA2C;AAC3C,gEAAiE;AAE1D,KAAK,UAAU,kBAAkB,CAAC,IAAU;IAC/C,MAAM,OAAO,GAAG,KAAK,CAAC;IAEtB,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC;QAChC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE;YACZ,QAAQ,EAAE,QAAQ;YAClB,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO;SAChC,CAAC;QACF,CAAC,KAAK,IAAI,EAAE;YACR,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;YACzE,MAAM,IAAI,oBAAY,CAAC,uDAAuD,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;QAC5G,CAAC,CAAC,EAAE;KACP,CAAC,CAAC;IAEH,IAAA,uCAAoB,EAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,yCAAyC,EAAE,CAAC,EAAE,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAc,CAAC,CAAC,CAAC;IAE5I,OAAO;QACH,GAAG,EAAE,QAAQ,CAAC,GAAG;QACjB,IAAI,EAAE,MAAM,QAAQ,CAAC,IAAI,EAAE;QAC3B,UAAU,EAAE,QAAQ,CAAC,MAAM;QAC3B,eAAe;KAClB,CAAC;AACN,CAAC;AAtBD,gDAsBC","sourcesContent":["import { EngineScrapeResult } from \"..\";\nimport { Meta } from \"../..\";\nimport { TimeoutError } from \"../../error\";\nimport { specialtyScrapeCheck } from \"../utils/specialtyHandler\";\n\nexport async function scrapeURLWithFetch(meta: Meta): Promise<EngineScrapeResult> {\n    const timeout = 20000;\n\n    const response = await Promise.race([\n        fetch(meta.url, {\n            redirect: \"follow\",\n            headers: meta.options.headers,\n        }),\n        (async () => {\n            await new Promise((resolve) => setTimeout(() => resolve(null), timeout));\n            throw new TimeoutError(\"Fetch was unable to scrape the page before timing out\", { cause: { timeout } });\n        })()\n    ]);\n\n    specialtyScrapeCheck(meta.logger.child({ method: \"scrapeURLWithFetch/specialtyScrapeCheck\" }), Object.fromEntries(response.headers as any));\n\n    return {\n        url: response.url,\n        html: await response.text(),\n        statusCode: response.status,\n        // TODO: error?\n    };\n}\n"]}