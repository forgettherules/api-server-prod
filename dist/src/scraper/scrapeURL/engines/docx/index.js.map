{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../src/scraper/scrapeURL/engines/docx/index.ts"],"names":[],"mappings":";;;;;;AAEA,wDAAqD;AACrD,sDAA8B;AAEvB,KAAK,UAAU,UAAU,CAAC,IAAU;IACvC,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,MAAM,IAAA,2BAAY,EAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;IAEzE,OAAO;QACH,GAAG,EAAE,QAAQ,CAAC,GAAG;QACjB,UAAU,EAAE,QAAQ,CAAC,MAAM;QAE3B,IAAI,EAAE,CAAC,MAAM,iBAAO,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,KAAK;KACpE,CAAA;AACL,CAAC;AATD,gCASC","sourcesContent":["import { Meta } from \"../..\";\nimport { EngineScrapeResult } from \"..\";\nimport { downloadFile } from \"../utils/downloadFile\";\nimport mammoth from \"mammoth\";\n\nexport async function scrapeDOCX(meta: Meta): Promise<EngineScrapeResult> {\n    const { response, tempFilePath } = await downloadFile(meta.id, meta.url);\n\n    return {\n        url: response.url,\n        statusCode: response.status,\n\n        html: (await mammoth.convertToHtml({ path: tempFilePath })).value,\n    }\n}\n"]}