{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../src/scraper/scrapeURL/engines/playwright/index.ts"],"names":[],"mappings":";;;AAAA,6BAAwB;AAGxB,uCAA2C;AAC3C,2CAA8C;AAEvC,KAAK,UAAU,uBAAuB,CAAC,IAAU;IACpD,MAAM,OAAO,GAAG,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;IAE7C,MAAM,QAAQ,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC;QAChC,MAAM,IAAA,mBAAW,EAAC;YACd,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,2BAA4B;YAC7C,OAAO,EAAE;gBACL,cAAc,EAAE,kBAAkB;aACrC;YACD,IAAI,EAAE;gBACF,GAAG,EAAE,IAAI,CAAC,GAAG;gBACb,eAAe,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO;gBACrC,OAAO;gBACP,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO;aAChC;YACD,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qCAAqC,CAAC;YAChE,MAAM,EAAE,OAAC,CAAC,MAAM,CAAC;gBACb,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE;gBACnB,cAAc,EAAE,OAAC,CAAC,MAAM,EAAE;gBAC1B,SAAS,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;aACnC,CAAC;SACL,CAAC;QACF,CAAC,KAAK,IAAI,EAAE;YACR,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;YACvE,MAAM,IAAI,oBAAY,CAAC,4DAA4D,EAAE,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;QACjH,CAAC,CAAC,EAAE;KACP,CAAC,CAAC;IAEH,OAAO;QACH,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,kCAAkC;QACjD,IAAI,EAAE,QAAQ,CAAC,OAAO;QACtB,UAAU,EAAE,QAAQ,CAAC,cAAc;QACnC,KAAK,EAAE,QAAQ,CAAC,SAAS;KAC5B,CAAA;AACL,CAAC;AAnCD,0DAmCC","sourcesContent":["import { z } from \"zod\";\nimport { EngineScrapeResult } from \"..\";\nimport { Meta } from \"../..\";\nimport { TimeoutError } from \"../../error\";\nimport { robustFetch } from \"../../lib/fetch\";\n\nexport async function scrapeURLWithPlaywright(meta: Meta): Promise<EngineScrapeResult> {\n    const timeout = 20000 + meta.options.waitFor;\n\n    const response = await Promise.race([\n        await robustFetch({\n            url: process.env.PLAYWRIGHT_MICROSERVICE_URL!,\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: {\n                url: meta.url,\n                wait_after_load: meta.options.waitFor,\n                timeout,\n                headers: meta.options.headers,\n            },\n            method: \"POST\",\n            logger: meta.logger.child(\"scrapeURLWithPlaywright/robustFetch\"),\n            schema: z.object({\n                content: z.string(),\n                pageStatusCode: z.number(),\n                pageError: z.string().optional(),\n            }),\n        }),\n        (async () => {\n            await new Promise((resolve) => setTimeout(() => resolve(null), 20000));\n            throw new TimeoutError(\"Playwright was unable to scrape the page before timing out\", { cause: { timeout } });\n        })(),\n    ]);\n\n    return {\n        url: meta.url, // TODO: impove redirect following\n        html: response.content,\n        statusCode: response.pageStatusCode,\n        error: response.pageError,\n    }\n}\n"]}