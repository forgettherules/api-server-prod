{"version":3,"file":"removeUnwantedElements.js","sourceRoot":"","sources":["../../../../../src/scraper/scrapeURL/lib/removeUnwantedElements.ts"],"names":[],"mappings":"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","sourcesContent":["// TODO: refactor\n\nimport { AnyNode, Cheerio, load } from \"cheerio\";\nimport { ScrapeOptions } from \"../../../controllers/v1/types\";\n\nconst excludeNonMainTags = [\n    \"header\",\n    \"footer\",\n    \"nav\",\n    \"aside\",\n    \".header\",\n    \".top\",\n    \".navbar\",\n    \"#header\",\n    \".footer\",\n    \".bottom\",\n    \"#footer\",\n    \".sidebar\",\n    \".side\",\n    \".aside\",\n    \"#sidebar\",\n    \".modal\",\n    \".popup\",\n    \"#modal\",\n    \".overlay\",\n    \".ad\",\n    \".ads\",\n    \".advert\",\n    \"#ad\",\n    \".lang-selector\",\n    \".language\",\n    \"#language-selector\",\n    \".social\",\n    \".social-media\",\n    \".social-links\",\n    \"#social\",\n    \".menu\",\n    \".navigation\",\n    \"#nav\",\n    \".breadcrumbs\",\n    \"#breadcrumbs\",\n    \"#search-form\",\n    \".search\",\n    \"#search\",\n    \".share\",\n    \"#share\",\n    \".widget\",\n    \"#widget\",\n    \".cookie\",\n    \"#cookie\"\n];\n\nexport const removeUnwantedElements = (\n  html: string,\n  scrapeOptions: ScrapeOptions\n) => {\n  const soup = load(html);\n\n  if (scrapeOptions.includeTags && scrapeOptions.includeTags.filter(x => x.trim().length !== 0).length > 0) {\n    // Create a new root element to hold the tags to keep\n    const newRoot = load(\"<div></div>\")(\"div\");\n    scrapeOptions.includeTags.forEach((tag) => {\n        soup(tag).each((_, element) => {\n            newRoot.append(soup(element).clone());\n        });\n    });\n    return newRoot.html() ?? \"\";\n  }\n\n  soup(\"script, style, noscript, meta, head\").remove();\n\n  if (scrapeOptions.excludeTags && scrapeOptions.excludeTags.filter(x => x.trim().length !== 0).length > 0) {\n        scrapeOptions.excludeTags.forEach((tag) => {\n            let elementsToRemove: Cheerio<AnyNode>;\n            if (tag.startsWith(\"*\") && tag.endsWith(\"*\")) {\n                let classMatch = false;\n\n                const regexPattern = new RegExp(tag.slice(1, -1), \"i\");\n                elementsToRemove = soup(\"*\").filter((i, element) => {\n                    if (element.type === \"tag\") {\n                    const attributes = element.attribs;\n                    const tagNameMatches = regexPattern.test(element.name);\n                    const attributesMatch = Object.keys(attributes).some((attr) =>\n                        regexPattern.test(`${attr}=\"${attributes[attr]}\"`)\n                    );\n                    if (tag.startsWith(\"*.\")) {\n                        classMatch = Object.keys(attributes).some((attr) =>\n                        regexPattern.test(`class=\"${attributes[attr]}\"`)\n                        );\n                    }\n                    return tagNameMatches || attributesMatch || classMatch;\n                    }\n                    return false;\n                });\n            } else {\n                elementsToRemove = soup(tag);\n            }\n            elementsToRemove.remove();\n        });\n    }\n\n    if (scrapeOptions.onlyMainContent) {\n        excludeNonMainTags.forEach((tag) => {\n            const elementsToRemove = soup(tag);\n            elementsToRemove.remove();\n        });\n    }\n    \n    const cleanedHtml = soup.html();\n    return cleanedHtml;\n};\n"]}