{"version":3,"file":"scrapeURL.test.js","sourceRoot":"","sources":["../../../../src/scraper/scrapeURL/scrapeURL.test.ts"],"names":[],"mappings":"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","sourcesContent":["import \"dotenv/config\";\n\nprocess.env.ENV = \"test\";\n\nimport { scrapeURL } from \".\";\nimport { scrapeOptions } from \"../../controllers/v1/types\";\nimport { Engine } from \"./engines\";\n\nconst testEngines: (Engine | undefined)[] = [\n    undefined,\n    \"fire-engine;chrome-cdp\",\n    \"fire-engine;playwright\",\n    \"fire-engine;tlsclient\",\n    \"scrapingbee\",\n    \"scrapingbeeLoad\",\n    \"fetch\",\n];\n\nconst testEnginesScreenshot: (Engine | undefined)[] = [\n    undefined,\n    \"fire-engine;chrome-cdp\",\n    \"fire-engine;playwright\",\n    \"scrapingbee\",\n    \"scrapingbeeLoad\",\n];\n\ndescribe(\"Standalone scrapeURL tests\", () => {\n    describe.each(testEngines)(\"Engine %s\", (forceEngine: Engine | undefined) => {\n        it(\"Basic scrape\", async () => {\n            const out = await scrapeURL(\"test:scrape-basic\", \"https://www.roastmywebsite.ai/\", scrapeOptions.parse({}), { forceEngine });\n        \n            // expect(out.logs.length).toBeGreaterThan(0);\n            expect(out.success).toBe(true);\n            if (out.success) {\n                expect(out.document.warning).toBeUndefined();\n                expect(out.document).not.toHaveProperty(\"content\");\n                expect(out.document).toHaveProperty(\"markdown\");\n                expect(out.document).toHaveProperty(\"metadata\");\n                expect(out.document).not.toHaveProperty(\"html\");\n                expect(out.document.markdown).toContain(\"_Roast_\");\n                expect(out.document.metadata.error).toBeUndefined();\n                expect(out.document.metadata.title).toBe(\"Roast My Website\");\n                expect(out.document.metadata.description).toBe(\n                    \"Welcome to Roast My Website, the ultimate tool for putting your website through the wringer! This repository harnesses the power of Firecrawl to scrape and capture screenshots of websites, and then unleashes the latest LLM vision models to mercilessly roast them. 🌶️\"\n                );\n                expect(out.document.metadata.keywords).toBe(\n                    \"Roast My Website,Roast,Website,GitHub,Firecrawl\"\n                );\n                expect(out.document.metadata.robots).toBe(\"follow, index\");\n                expect(out.document.metadata.ogTitle).toBe(\"Roast My Website\");\n                expect(out.document.metadata.ogDescription).toBe(\n                    \"Welcome to Roast My Website, the ultimate tool for putting your website through the wringer! This repository harnesses the power of Firecrawl to scrape and capture screenshots of websites, and then unleashes the latest LLM vision models to mercilessly roast them. 🌶️\"\n                );\n                expect(out.document.metadata.ogUrl).toBe(\n                    \"https://www.roastmywebsite.ai\"\n                );\n                expect(out.document.metadata.ogImage).toBe(\n                    \"https://www.roastmywebsite.ai/og.png\"\n                );\n                expect(out.document.metadata.ogLocaleAlternate).toStrictEqual([]);\n                expect(out.document.metadata.ogSiteName).toBe(\"Roast My Website\");\n                expect(out.document.metadata.sourceURL).toBe(\n                    \"https://www.roastmywebsite.ai/\"\n                );\n                expect(out.document.metadata.statusCode).toBe(200);\n            }\n        \n        }, 30000);\n    \n        it(\"Scrape with formats markdown and html\", async () => {\n            const out = await scrapeURL(\"test:scrape-formats-markdown-html\", \"https://roastmywebsite.ai\", scrapeOptions.parse({\n                formats: [\"markdown\", \"html\"],\n            }), { forceEngine });\n        \n            // expect(out.logs.length).toBeGreaterThan(0);\n            expect(out.success).toBe(true);\n            if (out.success) {\n                expect(out.document.warning).toBeUndefined();\n                expect(out.document).toHaveProperty(\"markdown\");\n                expect(out.document).toHaveProperty(\"html\");\n                expect(out.document).toHaveProperty(\"metadata\");\n                expect(out.document.markdown).toContain(\"_Roast_\");\n                expect(out.document.html).toContain(\"<h1\");\n                expect(out.document.metadata.statusCode).toBe(200);\n                expect(out.document.metadata.error).toBeUndefined();\n            }\n        \n        }, 30000);\n    \n        it(\"Scrape with onlyMainContent disabled\", async () => {\n            const out = await scrapeURL(\"test:scrape-onlyMainContent-false\", \"https://www.scrapethissite.com/\", scrapeOptions.parse({\n                onlyMainContent: false,\n            }), { forceEngine });\n    \n            // expect(out.logs.length).toBeGreaterThan(0);\n            expect(out.success).toBe(true);\n            if (out.success) {\n                expect(out.document.warning).toBeUndefined();\n                expect(out.document).toHaveProperty(\"markdown\");\n                expect(out.document).toHaveProperty(\"metadata\");\n                expect(out.document).not.toHaveProperty(\"html\");\n                expect(out.document.markdown).toContain(\"[FAQ](/faq/)\"); // .nav\n                expect(out.document.markdown).toContain(\"Hartley Brody 2023\"); // #footer\n            }\n        }, 30000);\n    \n        it(\"Scrape with excludeTags\", async () => {\n            const out = await scrapeURL(\"test:scrape-excludeTags\", \"https://www.scrapethissite.com/\", scrapeOptions.parse({\n                onlyMainContent: false,\n                excludeTags: ['.nav', '#footer', 'strong'],\n            }), { forceEngine });\n    \n            // expect(out.logs.length).toBeGreaterThan(0);\n            expect(out.success).toBe(true);\n            if (out.success) {\n                expect(out.document.warning).toBeUndefined();\n                expect(out.document).toHaveProperty(\"markdown\");\n                expect(out.document).toHaveProperty(\"metadata\");\n                expect(out.document).not.toHaveProperty(\"html\");\n                expect(out.document.markdown).not.toContain(\"Hartley Brody 2023\");\n                expect(out.document.markdown).not.toContain(\"[FAQ](/faq/)\");\n            }\n        }, 30000);\n    \n        it(\"Scrape of a page with 400 status code\", async () => {\n            const out = await scrapeURL(\"test:scrape-400\", \"https://httpstat.us/400\", scrapeOptions.parse({}), { forceEngine });\n    \n            // expect(out.logs.length).toBeGreaterThan(0);\n            expect(out.success).toBe(true);\n            if (out.success) {\n                expect(out.document.warning).toBeUndefined();\n                expect(out.document).toHaveProperty('markdown');\n                expect(out.document).toHaveProperty('metadata');\n                expect(out.document.metadata.statusCode).toBe(400);\n            }\n        }, 30000);\n    \n        it(\"Scrape of a page with 401 status code\", async () => {\n            const out = await scrapeURL(\"test:scrape-401\", \"https://httpstat.us/401\", scrapeOptions.parse({}), { forceEngine });\n    \n            // expect(out.logs.length).toBeGreaterThan(0);\n            expect(out.success).toBe(true);\n            if (out.success) {\n                expect(out.document.warning).toBeUndefined();\n                expect(out.document).toHaveProperty('markdown');\n                expect(out.document).toHaveProperty('metadata');\n                expect(out.document.metadata.statusCode).toBe(401);\n            }\n        }, 30000);\n    \n        it(\"Scrape of a page with 403 status code\", async () => {\n            const out = await scrapeURL(\"test:scrape-403\", \"https://httpstat.us/403\", scrapeOptions.parse({}), { forceEngine });\n    \n            // expect(out.logs.length).toBeGreaterThan(0);\n            expect(out.success).toBe(true);\n            if (out.success) {\n                expect(out.document.warning).toBeUndefined();\n                expect(out.document).toHaveProperty('markdown');\n                expect(out.document).toHaveProperty('metadata');\n                expect(out.document.metadata.statusCode).toBe(403);\n            }\n        }, 30000);\n    \n        it(\"Scrape of a page with 404 status code\", async () => {\n            const out = await scrapeURL(\"test:scrape-404\", \"https://httpstat.us/404\", scrapeOptions.parse({}), { forceEngine });\n    \n            // expect(out.logs.length).toBeGreaterThan(0);\n            expect(out.success).toBe(true);\n            if (out.success) {\n                expect(out.document.warning).toBeUndefined();\n                expect(out.document).toHaveProperty('markdown');\n                expect(out.document).toHaveProperty('metadata');\n                expect(out.document.metadata.statusCode).toBe(404);\n            }\n        }, 30000);\n    \n        it(\"Scrape of a page with 405 status code\", async () => {\n            const out = await scrapeURL(\"test:scrape-405\", \"https://httpstat.us/405\", scrapeOptions.parse({}), { forceEngine });\n    \n            // expect(out.logs.length).toBeGreaterThan(0);\n            expect(out.success).toBe(true);\n            if (out.success) {\n                expect(out.document.warning).toBeUndefined();\n                expect(out.document).toHaveProperty('markdown');\n                expect(out.document).toHaveProperty('metadata');\n                expect(out.document.metadata.statusCode).toBe(405);\n            }\n        }, 30000);\n    \n        it(\"Scrape of a page with 500 status code\", async () => {\n            const out = await scrapeURL(\"test:scrape-500\", \"https://httpstat.us/500\", scrapeOptions.parse({}), { forceEngine });\n    \n            // expect(out.logs.length).toBeGreaterThan(0);\n            expect(out.success).toBe(true);\n            if (out.success) {\n                expect(out.document.warning).toBeUndefined();\n                expect(out.document).toHaveProperty('markdown');\n                expect(out.document).toHaveProperty('metadata');\n                expect(out.document.metadata.statusCode).toBe(500);\n            }\n        }, 30000);\n\n        it(\"Scrape a redirected page\", async () => {\n            const out = await scrapeURL(\"test:scrape-redirect\", \"https://scrapethissite.com/\", scrapeOptions.parse({}), { forceEngine });\n    \n            // expect(out.logs.length).toBeGreaterThan(0);\n            expect(out.success).toBe(true);\n            if (out.success) {\n                expect(out.document.warning).toBeUndefined();\n                expect(out.document).toHaveProperty('markdown');\n                expect(out.document.markdown).toContain(\"Explore Sandbox\");\n                expect(out.document).toHaveProperty('metadata');\n                expect(out.document.metadata.sourceURL).toBe(\"https://scrapethissite.com/\");\n                expect(out.document.metadata.url).toBe(\"https://www.scrapethissite.com/\");\n                expect(out.document.metadata.statusCode).toBe(200);\n                expect(out.document.metadata.error).toBeUndefined();\n            }\n        }, 30000);\n    });\n\n    describe.each(testEnginesScreenshot)(\"Screenshot on engine %s\", (forceEngine: Engine | undefined) => {\n        it(\"Scrape with screenshot\", async () => {\n            const out = await scrapeURL(\"test:scrape-screenshot\", \"https://www.scrapethissite.com/\", scrapeOptions.parse({\n                formats: [\"screenshot\"],\n            }), { forceEngine });\n    \n            // expect(out.logs.length).toBeGreaterThan(0);\n            expect(out.success).toBe(true);\n            if (out.success) {\n                expect(out.document.warning).toBeUndefined();\n                expect(out.document).toHaveProperty('screenshot');\n                expect(typeof out.document.screenshot).toBe(\"string\");\n                expect(out.document.screenshot!.startsWith(\"https://service.firecrawl.dev/storage/v1/object/public/media/\"));\n                // TODO: attempt to fetch screenshot\n                expect(out.document).toHaveProperty('metadata');\n                expect(out.document.metadata.statusCode).toBe(200);\n                expect(out.document.metadata.error).toBeUndefined();\n            }\n        }, 30000);\n    \n        it(\"Scrape with full-page screenshot\", async () => {\n            const out = await scrapeURL(\"test:scrape-screenshot-fullPage\", \"https://www.scrapethissite.com/\", scrapeOptions.parse({\n                formats: [\"screenshot@fullPage\"],\n            }), { forceEngine });\n    \n            // expect(out.logs.length).toBeGreaterThan(0);\n            expect(out.success).toBe(true);\n            if (out.success) {\n                expect(out.document.warning).toBeUndefined();\n                expect(out.document).toHaveProperty('screenshot');\n                expect(typeof out.document.screenshot).toBe(\"string\");\n                expect(out.document.screenshot!.startsWith(\"https://service.firecrawl.dev/storage/v1/object/public/media/\"));\n                // TODO: attempt to fetch screenshot\n                expect(out.document).toHaveProperty('metadata');\n                expect(out.document.metadata.statusCode).toBe(200);\n                expect(out.document.metadata.error).toBeUndefined();\n            }\n        }, 30000);\n    });\n\n    it(\"Scrape of a PDF file\", async () => {\n        const out = await scrapeURL(\"test:scrape-pdf\", \"https://arxiv.org/pdf/astro-ph/9301001.pdf\", scrapeOptions.parse({}));\n\n        // expect(out.logs.length).toBeGreaterThan(0);\n        expect(out.success).toBe(true);\n        if (out.success) {\n            expect(out.document.warning).toBeUndefined();\n            expect(out.document).toHaveProperty('metadata');\n            expect(out.document.markdown).toContain('Broad Line Radio Galaxy');\n            expect(out.document.metadata.statusCode).toBe(200);\n            expect(out.document.metadata.error).toBeUndefined();\n        }\n    }, 60000);\n\n    it(\"Scrape a DOCX file\", async () => {\n        const out = await scrapeURL(\"test:scrape-docx\", \"https://nvca.org/wp-content/uploads/2019/06/NVCA-Model-Document-Stock-Purchase-Agreement.docx\", scrapeOptions.parse({}));\n\n        // expect(out.logs.length).toBeGreaterThan(0);\n        expect(out.success).toBe(true);\n        if (out.success) {\n            expect(out.document.warning).toBeUndefined();\n            expect(out.document).toHaveProperty('metadata');\n            expect(out.document.markdown).toContain('SERIES A PREFERRED STOCK PURCHASE AGREEMENT');\n            expect(out.document.metadata.statusCode).toBe(200);\n            expect(out.document.metadata.error).toBeUndefined();\n        }\n    }, 60000)\n\n    it(\"LLM extract with prompt and schema\", async () => {\n        const out = await scrapeURL(\"test:llm-extract-prompt-schema\", \"https://firecrawl.dev\", scrapeOptions.parse({\n            formats: [\"extract\"],\n            extract: {\n                prompt: \"Based on the information on the page, find what the company's mission is and whether it supports SSO, and whether it is open source\",\n                schema: {\n                    type: \"object\",\n                    properties: {\n                        company_mission: { type: \"string\" },\n                        supports_sso: { type: \"boolean\" },\n                        is_open_source: { type: \"boolean\" },\n                    },\n                    required: [\"company_mission\", \"supports_sso\", \"is_open_source\"],\n                    additionalProperties: false,\n                },\n            },\n        }));\n\n        // expect(out.logs.length).toBeGreaterThan(0);\n        expect(out.success).toBe(true);\n        if (out.success) {\n            expect(out.document.warning).toBeUndefined();\n            expect(out.document).toHaveProperty(\"extract\");\n            expect(out.document.extract).toHaveProperty(\"company_mission\");\n            expect(out.document.extract).toHaveProperty(\"supports_sso\");\n            expect(out.document.extract).toHaveProperty(\"is_open_source\");\n            expect(typeof out.document.extract.company_mission).toBe(\"string\");\n            expect(out.document.extract.supports_sso).toBe(false);\n            expect(out.document.extract.is_open_source).toBe(true);\n        }\n    }, 120000)\n\n    it(\"LLM extract with schema only\", async () => {\n        const out = await scrapeURL(\"test:llm-extract-schema\", \"https://firecrawl.dev\", scrapeOptions.parse({\n            formats: [\"extract\"],\n            extract: {\n                schema: {\n                    type: \"object\",\n                    properties: {\n                        company_mission: { type: \"string\" },\n                        supports_sso: { type: \"boolean\" },\n                        is_open_source: { type: \"boolean\" },\n                    },\n                    required: [\"company_mission\", \"supports_sso\", \"is_open_source\"],\n                    additionalProperties: false,\n                },\n            },\n        }));\n\n        // expect(out.logs.length).toBeGreaterThan(0);\n        expect(out.success).toBe(true);\n        if (out.success) {\n            expect(out.document.warning).toBeUndefined();\n            expect(out.document).toHaveProperty(\"extract\");\n            expect(out.document.extract).toHaveProperty(\"company_mission\");\n            expect(out.document.extract).toHaveProperty(\"supports_sso\");\n            expect(out.document.extract).toHaveProperty(\"is_open_source\");\n            expect(typeof out.document.extract.company_mission).toBe(\"string\");\n            expect(out.document.extract.supports_sso).toBe(false);\n            expect(out.document.extract.is_open_source).toBe(true);\n        }\n    }, 120000)\n\n    test.concurrent.each(new Array(100).fill(0).map((_, i) => i))(\"Concurrent scrape #%i\", async (i) => {\n        const url = \"https://www.scrapethissite.com/?i=\" + i;\n        const id = \"test:concurrent:\" + url;\n        const out = await scrapeURL(id, url, scrapeOptions.parse({}));\n\n        const replacer = (key: string, value: any) => {\n            if (value instanceof Error) {\n                return {\n                    ...value,\n                    message: value.message,\n                    name: value.name,\n                    cause: value.cause,\n                    stack: value.stack,\n                }\n            } else {\n                return value;\n            }\n        }\n\n        // verify that log collection works properly while concurrency is happening\n        // expect(out.logs.length).toBeGreaterThan(0);\n        const weirdLogs = out.logs.filter(x => x.scrapeId !== id);\n        if (weirdLogs.length > 0) {\n            console.warn(JSON.stringify(weirdLogs, replacer));\n        }\n        expect(weirdLogs.length).toBe(0); \n\n        if (!out.success) console.error(JSON.stringify(out, replacer));\n        expect(out.success).toBe(true);\n        \n        if (out.success) {\n            expect(out.document.warning).toBeUndefined();\n            expect(out.document).toHaveProperty('markdown');\n            expect(out.document).toHaveProperty('metadata');\n            expect(out.document.metadata.error).toBeUndefined();\n            expect(out.document.metadata.statusCode).toBe(200);\n        }\n    }, 30000);\n})\n"]}