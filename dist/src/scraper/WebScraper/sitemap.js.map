{"version":3,"file":"sitemap.js","sourceRoot":"","sources":["../../../../src/scraper/WebScraper/sitemap.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { axiosTimeout } from \"../../lib/timeout\";\nimport { parseStringPromise } from \"xml2js\";\nimport { WebCrawler } from \"./crawler\";\nimport { logger } from \"../../lib/logger\";\nimport { scrapeURL } from \"../scrapeURL\";\nimport { scrapeOptions } from \"../../controllers/v1/types\";\n\nexport async function getLinksFromSitemap(\n  {\n    sitemapUrl,\n    allUrls = [],\n    mode = 'axios'\n  }: {\n    sitemapUrl: string,\n    allUrls?: string[],\n    mode?: 'axios' | 'fire-engine'\n  }\n): Promise<string[]> {\n  try {\n    let content: string = \"\";\n    try {\n      if (mode === 'axios' || process.env.FIRE_ENGINE_BETA_URL === '') {\n        const response = await axios.get(sitemapUrl, { timeout: axiosTimeout });\n        content = response.data;\n      } else if (mode === 'fire-engine') {\n        const response = await scrapeURL(\"sitemap\", sitemapUrl, scrapeOptions.parse({ formats: [\"rawHtml\"] }), { forceEngine: \"fire-engine;tlsclient\", v0DisableJsDom: true });\n        if (!response.success) {\n          throw response.error;\n        }\n        content = response.document.rawHtml!;\n      }\n    } catch (error) {\n      logger.error(`Request failed for ${sitemapUrl}: ${error.message}`);\n\n      return allUrls;\n    }\n\n    const parsed = await parseStringPromise(content);\n    const root = parsed.urlset || parsed.sitemapindex;\n\n    if (root && root.sitemap) {\n      const sitemapPromises = root.sitemap\n        .filter(sitemap => sitemap.loc && sitemap.loc.length > 0)\n        .map(sitemap => getLinksFromSitemap({ sitemapUrl: sitemap.loc[0], allUrls, mode }));\n      await Promise.all(sitemapPromises);\n    } else if (root && root.url) {\n      const validUrls = root.url\n        .filter(url => url.loc && url.loc.length > 0 && !WebCrawler.prototype.isFile(url.loc[0]))\n        .map(url => url.loc[0]);\n      allUrls.push(...validUrls);\n    }\n  } catch (error) {\n    logger.debug(`Error processing sitemapUrl: ${sitemapUrl} | Error: ${error.message}`);\n  }\n\n  return allUrls;\n}\n\nexport const fetchSitemapData = async (url: string, timeout?: number): Promise<SitemapEntry[] | null> => {\n  const sitemapUrl = url.endsWith(\"/sitemap.xml\") ? url : `${url}/sitemap.xml`;\n  try {\n    const response = await axios.get(sitemapUrl, { timeout: timeout || axiosTimeout });\n    if (response.status === 200) {\n      const xml = response.data;\n      const parsedXml = await parseStringPromise(xml);\n\n      const sitemapData: SitemapEntry[] = [];\n      if (parsedXml.urlset && parsedXml.urlset.url) {\n        for (const urlElement of parsedXml.urlset.url) {\n          const sitemapEntry: SitemapEntry = { loc: urlElement.loc[0] };\n          if (urlElement.lastmod) sitemapEntry.lastmod = urlElement.lastmod[0];\n          if (urlElement.changefreq) sitemapEntry.changefreq = urlElement.changefreq[0];\n          if (urlElement.priority) sitemapEntry.priority = Number(urlElement.priority[0]);\n          sitemapData.push(sitemapEntry);\n        }\n      }\n\n      return sitemapData;\n    }\n    return null;\n  } catch (error) {\n    // Error handling for failed sitemap fetch\n  }\n  return [];\n}\n\nexport interface SitemapEntry {\n  loc: string;\n  lastmod?: string;\n  changefreq?: string;\n  priority?: number;\n}"]}