{"version":3,"file":"handleCustomScraping.js","sourceRoot":"","sources":["../../../../../src/scraper/WebScraper/custom/handleCustomScraping.ts"],"names":[],"mappings":";;;AAAA,gDAA6C;AAEtC,KAAK,UAAU,oBAAoB,CACxC,IAAY,EACZ,GAAW;IAEX,qCAAqC;IACrC,IAAI,IAAI,CAAC,QAAQ,CAAC,4BAA4B,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,uBAAuB,CAAC,EAAE,CAAC;QAC1F,eAAM,CAAC,KAAK,CACV,iCAAiC,GAAG,2CAA2C,CAChF,CAAC;QACF,OAAO;YACL,OAAO,EAAE,aAAa;YACtB,GAAG,EAAE,GAAG;YACR,aAAa,EAAE,IAAI;YACnB,WAAW,EAAE;gBACX,YAAY,EAAE,CAAC,kEAAkE,CAAC;aACnF;SACF,CAAC;IACJ,CAAC;IAED,mCAAmC;IACnC,IAAI,IAAI,CAAC,QAAQ,CAAC,sCAAsC,CAAC,EAAE,CAAC;QAC1D,eAAM,CAAC,KAAK,CACV,2BAA2B,GAAG,2CAA2C,CAC1E,CAAC;QACF,OAAO;YACL,OAAO,EAAE,aAAa;YACtB,GAAG,EAAE,GAAG;YACR,aAAa,EAAE,IAAI;SACpB,CAAC;IACJ,CAAC;IAED,gDAAgD;IAChD,MAAM,sBAAsB,GAAG,+EAA+E,CAAC;IAC/G,MAAM,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;IAChE,IAAI,oBAAoB,EAAE,CAAC;QACzB,MAAM,GAAG,GAAG,oBAAoB,CAAC,CAAC,CAAC,CAAC;QACpC,eAAM,CAAC,KAAK,CAAC,mCAAmC,GAAG,EAAE,CAAC,CAAC;QAEvD,MAAM,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,uDAAuD,CAAC,CAAC;QACvF,IAAI,WAAW,EAAE,CAAC;YAChB,MAAM,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,MAAM,GAAG,kDAAkD,MAAM,EAAE,CAAC;YAE1E,OAAO;gBACL,OAAO,EAAE,KAAK;gBACd,GAAG,EAAE,MAAM;aACZ,CAAC;QACJ,CAAC;IACH,CAAC;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAnDD,oDAmDC","sourcesContent":["import { logger } from \"../../../lib/logger\";\n\nexport async function handleCustomScraping(\n  text: string,\n  url: string\n): Promise<{ scraper: string; url: string; waitAfterLoad?: number, pageOptions?: { scrollXPaths?: string[] } } | null> {\n  // Check for Readme Docs special case\n  if (text.includes('<meta name=\"readme-deploy\"') && !url.includes('developers.notion.com')) {\n    logger.debug(\n      `Special use case detected for ${url}, using Fire Engine with wait time 1000ms`\n    );\n    return {\n      scraper: \"fire-engine\",\n      url: url,\n      waitAfterLoad: 1000,\n      pageOptions: {\n        scrollXPaths: ['//*[@id=\"ReferencePlayground\"]/section[3]/div/pre/div/div/div[5]']\n      }\n    };\n  }\n\n  // Check for Vanta security portals\n  if (text.includes('<link href=\"https://static.vanta.com')) {\n    logger.debug(\n      `Vanta link detected for ${url}, using Fire Engine with wait time 3000ms`\n    );\n    return {\n      scraper: \"fire-engine\",\n      url: url,\n      waitAfterLoad: 3000,\n    };\n  }\n\n  // Check for Google Drive PDF links in meta tags\n  const googleDriveMetaPattern = /<meta itemprop=\"url\" content=\"(https:\\/\\/drive\\.google\\.com\\/file\\/d\\/[^\"]+)\"/;\n  const googleDriveMetaMatch = text.match(googleDriveMetaPattern);\n  if (googleDriveMetaMatch) {\n    const url = googleDriveMetaMatch[1];\n    logger.debug(`Google Drive PDF link detected: ${url}`);\n\n    const fileIdMatch = url.match(/https:\\/\\/drive\\.google\\.com\\/file\\/d\\/([^\\/]+)\\/view/);\n    if (fileIdMatch) {\n      const fileId = fileIdMatch[1];\n      const pdfUrl = `https://drive.google.com/uc?export=download&id=${fileId}`;\n\n      return {\n        scraper: \"pdf\",\n        url: pdfUrl\n      };\n    }\n  }\n  \n  return null;\n}\n"]}