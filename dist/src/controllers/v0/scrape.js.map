{"version":3,"file":"scrape.js","sourceRoot":"","sources":["../../../../src/controllers/v0/scrape.ts"],"names":[],"mappings":"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","sourcesContent":["import { ExtractorOptions, PageOptions } from \"./../../lib/entities\";\nimport { Request, Response } from \"express\";\nimport {\n  billTeam,\n  checkTeamCredits,\n} from \"../../services/billing/credit_billing\";\nimport { authenticateUser } from \"../auth\";\nimport { PlanType, RateLimiterMode } from \"../../types\";\nimport { logJob } from \"../../services/logging/log_job\";\nimport { Document, fromLegacyCombo, toLegacyDocument, url as urlSchema } from \"../v1/types\";\nimport { isUrlBlocked } from \"../../scraper/WebScraper/utils/blocklist\"; // Import the isUrlBlocked function\nimport { numTokensFromString } from \"../../lib/LLM-extraction/helpers\";\nimport {\n  defaultPageOptions,\n  defaultExtractorOptions,\n  defaultTimeout,\n  defaultOrigin,\n} from \"../../lib/default-values\";\nimport { addScrapeJob, waitForJob } from \"../../services/queue-jobs\";\nimport { getScrapeQueue } from \"../../services/queue-service\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { logger } from \"../../lib/logger\";\nimport * as Sentry from \"@sentry/node\";\nimport { getJobPriority } from \"../../lib/job-priority\";\nimport { fromLegacyScrapeOptions } from \"../v1/types\";\nimport { ZodError } from \"zod\";\n\nexport async function scrapeHelper(\n  jobId: string,\n  req: Request,\n  team_id: string,\n  crawlerOptions: any,\n  pageOptions: PageOptions,\n  extractorOptions: ExtractorOptions,\n  timeout: number,\n  plan?: PlanType\n): Promise<{\n  success: boolean;\n  error?: string;\n  data?: Document | { url: string };\n  returnCode: number;\n}> {\n  const url = urlSchema.parse(req.body.url);\n  if (typeof url !== \"string\") {\n    return { success: false, error: \"Url is required\", returnCode: 400 };\n  }\n\n  if (isUrlBlocked(url)) {\n    return {\n      success: false,\n      error:\n        \"Firecrawl currently does not support social media scraping due to policy restrictions. We're actively working on building support for it.\",\n      returnCode: 403,\n    };\n  }\n\n  const jobPriority = await getJobPriority({ plan, team_id, basePriority: 10 });\n\n  const { scrapeOptions, internalOptions } = fromLegacyCombo(pageOptions, extractorOptions, timeout, crawlerOptions);\n\n  await addScrapeJob(\n    {\n      url,\n      mode: \"single_urls\",\n      team_id,\n      scrapeOptions,\n      internalOptions,\n      plan: plan!,\n      origin: req.body.origin ?? defaultOrigin,\n      is_scrape: true,\n    },\n    {},\n    jobId,\n    jobPriority\n  );\n\n  let doc;\n\n  const err = await Sentry.startSpan(\n    {\n      name: \"Wait for job to finish\",\n      op: \"bullmq.wait\",\n      attributes: { job: jobId },\n    },\n    async (span) => {\n      try {\n        doc = (await waitForJob<Document>(jobId, timeout));\n      } catch (e) {\n        if (e instanceof Error && (e.message.startsWith(\"Job wait\") || e.message === \"timeout\")) {\n          span.setAttribute(\"timedOut\", true);\n          return {\n            success: false,\n            error: \"Request timed out\",\n            returnCode: 408,\n          };\n        } else if (\n          typeof e === \"string\" &&\n          (e.includes(\"Error generating completions: \") ||\n            e.includes(\"Invalid schema for function\") ||\n            e.includes(\n              \"LLM extraction did not match the extraction schema you provided.\"\n            ))\n        ) {\n          return {\n            success: false,\n            error: e,\n            returnCode: 500,\n          };\n        } else {\n          throw e;\n        }\n      }\n      span.setAttribute(\"result\", JSON.stringify(doc));\n      return null;\n    }\n  );\n\n  if (err !== null) {\n    return err;\n  }\n\n  await getScrapeQueue().remove(jobId);\n\n  if (!doc) {\n    console.error(\"!!! PANIC DOC IS\", doc);\n    return {\n      success: true,\n      error: \"No page found\",\n      returnCode: 200,\n      data: doc,\n    };\n  }\n\n  delete doc.index;\n  delete doc.provider;\n\n  // Remove rawHtml if pageOptions.rawHtml is false and extractorOptions.mode is llm-extraction-from-raw-html\n  if (\n    !pageOptions.includeRawHtml &&\n    extractorOptions.mode == \"llm-extraction-from-raw-html\"\n  ) {\n    if (doc.rawHtml) {\n      delete doc.rawHtml;\n    }\n  }\n\n  if (!pageOptions.includeHtml) {\n    if (doc.html) {\n      delete doc.html;\n    }\n  }\n\n  return {\n    success: true,\n    data: toLegacyDocument(doc, internalOptions),\n    returnCode: 200,\n  };\n}\n\nexport async function scrapeController(req: Request, res: Response) {\n  try {\n    let earlyReturn = false;\n    // make sure to authenticate user first, Bearer <token>\n    const auth = await authenticateUser(\n      req,\n      res,\n      RateLimiterMode.Scrape\n    );\n    if (!auth.success) {\n      return res.status(auth.status).json({ error: auth.error });\n    }\n\n    const { team_id, plan, chunk } = auth;\n\n    const crawlerOptions = req.body.crawlerOptions ?? {};\n    const pageOptions = { ...defaultPageOptions, ...req.body.pageOptions };\n    const extractorOptions = {\n      ...defaultExtractorOptions,\n      ...req.body.extractorOptions,\n    };\n    const origin = req.body.origin ?? defaultOrigin;\n    let timeout = req.body.timeout ?? defaultTimeout;\n\n    if (extractorOptions.mode.includes(\"llm-extraction\")) {\n      if (\n        typeof extractorOptions.extractionSchema !== \"object\" ||\n        extractorOptions.extractionSchema === null\n      ) {\n        return res.status(400).json({\n          error:\n            \"extractorOptions.extractionSchema must be an object if llm-extraction mode is specified\",\n        });\n      }\n\n      pageOptions.onlyMainContent = true;\n      timeout = req.body.timeout ?? 90000;\n    }\n\n    // checkCredits\n    try {\n      const { success: creditsCheckSuccess, message: creditsCheckMessage } =\n        await checkTeamCredits(chunk, team_id, 1);\n      if (!creditsCheckSuccess) {\n        earlyReturn = true;\n        return res.status(402).json({ error: \"Insufficient credits. For more credits, you can upgrade your plan at https://firecrawl.dev/pricing\" });\n      }\n    } catch (error) {\n      logger.error(error);\n      earlyReturn = true;\n      return res.status(500).json({\n        error:\n          \"Error checking team credits. Please contact help@firecrawl.com for help.\",\n      });\n    }\n\n    const jobId = uuidv4();\n\n    const startTime = new Date().getTime();\n    const result = await scrapeHelper(\n      jobId,\n      req,\n      team_id,\n      crawlerOptions,\n      pageOptions,\n      extractorOptions,\n      timeout,\n      plan\n    );\n    const endTime = new Date().getTime();\n    const timeTakenInSeconds = (endTime - startTime) / 1000;\n    const numTokens =\n      result.data && (result.data as Document).markdown\n        ? numTokensFromString((result.data as Document).markdown!, \"gpt-3.5-turbo\")\n        : 0;\n\n    if (result.success) {\n      let creditsToBeBilled = 1;\n      const creditsPerLLMExtract = 4;\n\n      if (extractorOptions.mode.includes(\"llm-extraction\")) {\n        // creditsToBeBilled = creditsToBeBilled + (creditsPerLLMExtract * filteredDocs.length);\n        creditsToBeBilled += creditsPerLLMExtract;\n      }\n\n      let startTimeBilling = new Date().getTime();\n\n      if (earlyReturn) {\n        // Don't bill if we're early returning\n        return;\n      }\n      if (creditsToBeBilled > 0) {\n        // billing for doc done on queue end, bill only for llm extraction\n        billTeam(team_id, chunk?.sub_id, creditsToBeBilled).catch(error => {\n          logger.error(`Failed to bill team ${team_id} for ${creditsToBeBilled} credits: ${error}`);\n          // Optionally, you could notify an admin or add to a retry queue here\n        });\n      }\n    }\n    \n    let doc = result.data;\n    if (!pageOptions || !pageOptions.includeRawHtml) {\n      if (doc && (doc as Document).rawHtml) {\n        delete (doc as Document).rawHtml;\n      }\n    }\n  \n    if(pageOptions && pageOptions.includeExtract) {\n      if(!pageOptions.includeMarkdown && doc && (doc as Document).markdown) {\n        delete (doc as Document).markdown;\n      }\n    }\n\n    const { scrapeOptions } = fromLegacyScrapeOptions(pageOptions, extractorOptions, timeout);\n\n    logJob({\n      job_id: jobId,\n      success: result.success,\n      message: result.error,\n      num_docs: 1,\n      docs: [doc],\n      time_taken: timeTakenInSeconds,\n      team_id: team_id,\n      mode: \"scrape\",\n      url: req.body.url,\n      crawlerOptions: crawlerOptions,\n      scrapeOptions,\n      origin: origin,\n      num_tokens: numTokens,\n    });\n\n    return res.status(result.returnCode).json(result);\n  } catch (error) {\n    Sentry.captureException(error);\n    logger.error(error);\n    return res.status(500).json({\n      error:\n        error instanceof ZodError\n          ? \"Invalid URL\"\n          : typeof error === \"string\"\n            ? error\n            : error?.message ?? \"Internal Server Error\",\n    });\n  }\n}\n"]}