{"version":3,"file":"keyAuth.js","sourceRoot":"","sources":["../../../../src/controllers/v0/keyAuth.ts"],"names":[],"mappings":";;;AAIA,kCAA2C;AAGpC,MAAM,iBAAiB,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,EAAE;IACrE,IAAI,CAAC;QACH,uDAAuD;QACvD,MAAM,IAAI,GAAG,MAAM,IAAA,uBAAgB,EACjC,GAAG,EACH,GAAG,CACJ,CAAC;QACF,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAClB,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAC7D,CAAC;QAED,mCAAmC;QACnC,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;IACjD,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;IACxD,CAAC;AACH,CAAC,CAAC;AAhBW,QAAA,iBAAiB,qBAgB5B","sourcesContent":["\nimport { AuthResponse, RateLimiterMode } from \"../../types\";\n\nimport { Request, Response } from \"express\";\nimport { authenticateUser } from \"../auth\";\n\n\nexport const keyAuthController = async (req: Request, res: Response) => {\n  try {\n    // make sure to authenticate user first, Bearer <token>\n    const auth = await authenticateUser(\n      req,\n      res\n    );\n    if (!auth.success) {\n      return res.status(auth.status).json({ error: auth.error });\n    }\n\n    // if success, return success: true\n    return res.status(200).json({ success: true });\n  } catch (error) {\n    return res.status(500).json({ error: error.message });\n  }\n};\n\n"]}