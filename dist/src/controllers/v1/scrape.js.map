{"version":3,"file":"scrape.js","sourceRoot":"","sources":["../../../../src/controllers/v1/scrape.ts"],"names":[],"mappings":"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","sourcesContent":["import { Response } from \"express\";\nimport { logger } from \"../../lib/logger\";\nimport {\n  Document,\n  RequestWithAuth,\n  ScrapeRequest,\n  scrapeRequestSchema,\n  ScrapeResponse,\n} from \"./types\";\nimport { billTeam } from \"../../services/billing/credit_billing\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { addScrapeJob, waitForJob } from \"../../services/queue-jobs\";\nimport { logJob } from \"../../services/logging/log_job\";\nimport { getJobPriority } from \"../../lib/job-priority\";\nimport { PlanType } from \"../../types\";\nimport { getScrapeQueue } from \"../../services/queue-service\";\n\nexport async function scrapeController(\n  req: RequestWithAuth<{}, ScrapeResponse, ScrapeRequest>,\n  res: Response<ScrapeResponse>\n) {\n  req.body = scrapeRequestSchema.parse(req.body);\n  let earlyReturn = false;\n\n  const origin = req.body.origin;\n  const timeout = req.body.timeout;\n  const jobId = uuidv4();\n\n  const startTime = new Date().getTime();\n  const jobPriority = await getJobPriority({\n    plan: req.auth.plan as PlanType,\n    team_id: req.auth.team_id,\n    basePriority: 10,\n  });\n\n  await addScrapeJob(\n    {\n      url: req.body.url,\n      mode: \"single_urls\",\n      team_id: req.auth.team_id,\n      scrapeOptions: req.body,\n      internalOptions: {},\n      plan: req.auth.plan!,\n      origin: req.body.origin,\n      is_scrape: true,\n    },\n    {},\n    jobId,\n    jobPriority\n  );\n\n  const totalWait = (req.body.waitFor ?? 0) + (req.body.actions ?? []).reduce((a,x) => (x.type === \"wait\" ? x.milliseconds ?? 0 : 0) + a, 0);\n\n  let doc: Document;\n  try {\n    doc = await waitForJob<Document>(jobId, timeout + totalWait); // TODO: better types for this\n  } catch (e) {\n    logger.error(`Error in scrapeController: ${e}`);\n    if (e instanceof Error && (e.message.startsWith(\"Job wait\") || e.message === \"timeout\")) {\n      return res.status(408).json({\n        success: false,\n        error: \"Request timed out\",\n      });\n    } else {\n      return res.status(500).json({\n        success: false,\n        error: `(Internal server error) - ${(e && e.message) ? e.message : e}`,\n      });\n    }\n  }\n\n  await getScrapeQueue().remove(jobId);\n\n  const endTime = new Date().getTime();\n  const timeTakenInSeconds = (endTime - startTime) / 1000;\n  const numTokens =\n    doc && doc.extract\n      // ? numTokensFromString(doc.markdown, \"gpt-3.5-turbo\")\n      ? 0 // TODO: fix\n      : 0;\n\n  let creditsToBeBilled = 1; // Assuming 1 credit per document\n  if (earlyReturn) {\n    // Don't bill if we're early returning\n    return;\n  }\n  if(req.body.extract && req.body.formats.includes(\"extract\")) {\n    creditsToBeBilled = 5;\n  }\n\n  billTeam(req.auth.team_id, req.acuc?.sub_id, creditsToBeBilled).catch(error => {\n    logger.error(`Failed to bill team ${req.auth.team_id} for ${creditsToBeBilled} credits: ${error}`);\n    // Optionally, you could notify an admin or add to a retry queue here\n  });\n\n  if (!req.body.formats.includes(\"rawHtml\")) {\n    if (doc && doc.rawHtml) {\n      delete doc.rawHtml;\n    }\n  }\n\n  logJob({\n    job_id: jobId,\n    success: true,\n    message: \"Scrape completed\",\n    num_docs: 1,\n    docs: [doc],\n    time_taken: timeTakenInSeconds,\n    team_id: req.auth.team_id,\n    mode: \"scrape\",\n    url: req.body.url,\n    scrapeOptions: req.body,\n    origin: origin,\n    num_tokens: numTokens,\n  });\n\n  return res.status(200).json({\n    success: true,\n    data: doc,\n    scrape_id: origin?.includes(\"website\") ? jobId : undefined,\n  });\n}\n"]}