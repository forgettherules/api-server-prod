{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import \"dotenv/config\";\nimport \"./services/sentry\"\nimport * as Sentry from \"@sentry/node\";\nimport express, { NextFunction, Request, Response } from \"express\";\nimport bodyParser from \"body-parser\";\nimport cors from \"cors\";\nimport { getScrapeQueue } from \"./services/queue-service\";\nimport { v0Router } from \"./routes/v0\";\nimport os from \"os\";\nimport { logger } from \"./lib/logger\";\nimport { adminRouter } from \"./routes/admin\";\nimport http from 'node:http';\nimport https from 'node:https';\nimport CacheableLookup  from 'cacheable-lookup';\nimport { v1Router } from \"./routes/v1\";\nimport expressWs from \"express-ws\";\nimport { ErrorResponse, ResponseWithSentry } from \"./controllers/v1/types\";\nimport { ZodError } from \"zod\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst { createBullBoard } = require(\"@bull-board/api\");\nconst { BullAdapter } = require(\"@bull-board/api/bullAdapter\");\nconst { ExpressAdapter } = require(\"@bull-board/express\");\n\nconst numCPUs = process.env.ENV === \"local\" ? 2 : os.cpus().length;\nlogger.info(`Number of CPUs: ${numCPUs} available`);\n\nconst cacheable = new CacheableLookup()\n\n\n// Install cacheable lookup for all other requests\ncacheable.install(http.globalAgent);\ncacheable.install(https.globalAgent);\n\n\nconst ws = expressWs(express());\nconst app = ws.app;\n\nglobal.isProduction = process.env.IS_PRODUCTION === \"true\";\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json({ limit: \"10mb\" }));\n\napp.use(cors()); // Add this line to enable CORS\n\nconst serverAdapter = new ExpressAdapter();\nserverAdapter.setBasePath(`/admin/${process.env.BULL_AUTH_KEY}/queues`);\n\nconst { addQueue, removeQueue, setQueues, replaceQueues } = createBullBoard({\n  queues: [new BullAdapter(getScrapeQueue())],\n  serverAdapter: serverAdapter,\n});\n\napp.use(\n  `/admin/${process.env.BULL_AUTH_KEY}/queues`,\n  serverAdapter.getRouter()\n);\n\napp.get(\"/\", (req, res) => {\n  res.send(\"SCRAPERS-JS: Hello, world! K8s!\");\n});\n\n//write a simple test function\napp.get(\"/test\", async (req, res) => {\n  res.send(\"Hello, world!\");\n});\n\n// register router\napp.use(v0Router);\napp.use(\"/v1\", v1Router);\napp.use(adminRouter);\n\nconst DEFAULT_PORT = process.env.PORT ?? 3002;\nconst HOST = process.env.HOST ?? \"localhost\";\n\nfunction startServer(port = DEFAULT_PORT) {\n  const server = app.listen(Number(port), HOST, () => {\n    logger.info(`Worker ${process.pid} listening on port ${port}`);\n    logger.info(\n      `For the Queue UI, open: http://${HOST}:${port}/admin/${process.env.BULL_AUTH_KEY}/queues`\n    );\n  });\n\n  const exitHandler = () => {\n    logger.info('SIGTERM signal received: closing HTTP server')\n    server.close(() => {\n      logger.info(\"Server closed.\");\n      process.exit(0);\n    });\n  };\n\n  process.on('SIGTERM', exitHandler);\n  process.on('SIGINT', exitHandler);\n  return server;\n}\n\nif (require.main === module) {\n  startServer();\n}\n\napp.get(`/serverHealthCheck`, async (req, res) => {\n  try {\n    const scrapeQueue = getScrapeQueue();\n    const [waitingJobs] = await Promise.all([\n      scrapeQueue.getWaitingCount(),\n    ]);\n    const noWaitingJobs = waitingJobs === 0;\n    // 200 if no active jobs, 503 if there are active jobs\n    return res.status(noWaitingJobs ? 200 : 500).json({\n      waitingJobs,\n    });\n  } catch (error) {\n    Sentry.captureException(error);\n    logger.error(error);\n    return res.status(500).json({ error: error.message });\n  }\n});\n\napp.get(\"/serverHealthCheck/notify\", async (req, res) => {\n  if (process.env.SLACK_WEBHOOK_URL) {\n    const treshold = 1; // The treshold value for the active jobs\n    const timeout = 60000; // 1 minute // The timeout value for the check in milliseconds\n\n    const getWaitingJobsCount = async () => {\n      const scrapeQueue = getScrapeQueue();\n      const [waitingJobsCount] = await Promise.all([\n        scrapeQueue.getWaitingCount(),\n      ]);\n\n      return waitingJobsCount;\n    };\n\n    res.status(200).json({ message: \"Check initiated\" });\n\n    const checkWaitingJobs = async () => {\n      try {\n        let waitingJobsCount = await getWaitingJobsCount();\n        if (waitingJobsCount >= treshold) {\n          setTimeout(async () => {\n            // Re-check the waiting jobs count after the timeout\n            waitingJobsCount = await getWaitingJobsCount();\n            if (waitingJobsCount >= treshold) {\n              const slackWebhookUrl = process.env.SLACK_WEBHOOK_URL!;\n              const message = {\n                text: `⚠️ Warning: The number of active jobs (${waitingJobsCount}) has exceeded the threshold (${treshold}) for more than ${\n                  timeout / 60000\n                } minute(s).`,\n              };\n\n              const response = await fetch(slackWebhookUrl, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(message),\n              });\n\n              if (!response.ok) {\n                logger.error(\"Failed to send Slack notification\");\n              }\n            }\n          }, timeout);\n        }\n      } catch (error) {\n        Sentry.captureException(error);\n        logger.debug(error);\n      }\n    };\n\n    checkWaitingJobs();\n  }\n});\n\napp.get(\"/is-production\", (req, res) => {\n  res.send({ isProduction: global.isProduction });\n});\n\napp.use((err: unknown, req: Request<{}, ErrorResponse, undefined>, res: Response<ErrorResponse>, next: NextFunction) => {\n  if (err instanceof ZodError) {\n      if (Array.isArray(err.errors) && err.errors.find(x => x.message === \"URL uses unsupported protocol\")) {\n        logger.warn(\"Unsupported protocol error: \" + JSON.stringify(req.body));\n      }\n\n      res.status(400).json({ success: false, error: \"Bad Request\", details: err.errors });\n  } else {\n      next(err);\n  }\n});\n\nSentry.setupExpressErrorHandler(app);\n\napp.use((err: unknown, req: Request<{}, ErrorResponse, undefined>, res: ResponseWithSentry<ErrorResponse>, next: NextFunction) => {\n  if (err instanceof SyntaxError && 'status' in err && err.status === 400 && 'body' in err) {\n    return res.status(400).json({ success: false, error: 'Bad request, malformed JSON' });\n  }\n\n  const id = res.sentry ?? uuidv4();\n  let verbose = JSON.stringify(err);\n  if (verbose === \"{}\") {\n    if (err instanceof Error) {\n      verbose = JSON.stringify({\n        message: err.message,\n        name: err.name,\n        stack: err.stack,\n      });\n    }\n  }\n\n  logger.error(\"Error occurred in request! (\" + req.path + \") -- ID \" + id  + \" -- \" + verbose);\n  res.status(500).json({ success: false, error: \"An unexpected error occurred. Please contact help@firecrawl.com for help. Your exception ID is \" + id });\n});\n\nlogger.info(`Worker ${process.pid} started`);\n\n// const sq = getScrapeQueue();\n\n// sq.on(\"waiting\", j => ScrapeEvents.logJobEvent(j, \"waiting\"));\n// sq.on(\"active\", j => ScrapeEvents.logJobEvent(j, \"active\"));\n// sq.on(\"completed\", j => ScrapeEvents.logJobEvent(j, \"completed\"));\n// sq.on(\"paused\", j => ScrapeEvents.logJobEvent(j, \"paused\"));\n// sq.on(\"resumed\", j => ScrapeEvents.logJobEvent(j, \"resumed\"));\n// sq.on(\"removed\", j => ScrapeEvents.logJobEvent(j, \"removed\"));\n\n\n\n"]}