{"version":3,"file":"queue-service.js","sourceRoot":"","sources":["../../../src/services/queue-service.ts"],"names":[],"mappings":";;;;;;AAAA,mCAA+B;AAC/B,0CAAuC;AACvC,sDAA8B;AAE9B,IAAI,WAAkB,CAAC;AAEV,QAAA,eAAe,GAAG,IAAI,iBAAO,CAAC,OAAO,CAAC,GAAG,CAAC,SAAU,EAAE;IACjE,oBAAoB,EAAE,IAAI;CAC3B,CAAC,CAAC;AAEU,QAAA,eAAe,GAAG,eAAe,CAAC;AAE/C,SAAgB,cAAc;IAC5B,IAAI,CAAC,WAAW,EAAE,CAAC;QACjB,WAAW,GAAG,IAAI,cAAK,CACrB,uBAAe,EACf;YACE,UAAU,EAAE,uBAAe;YAC3B,iBAAiB,EAAE;gBACjB,gBAAgB,EAAE;oBAChB,GAAG,EAAE,KAAK,EAAE,WAAW;iBACxB;gBACD,YAAY,EAAE;oBACZ,GAAG,EAAE,KAAK,EAAE,WAAW;iBACxB;aACF;SACF;QACD,MAAM;QACN,gBAAgB;QAChB,gEAAgE;QAChE,8DAA8D;QAC9D,kCAAkC;QAClC,2BAA2B;QAC3B,OAAO;QACP,wBAAwB;QACxB,kBAAkB;QAClB,MAAM;QACN,IAAI;SACL,CAAC;QACF,eAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;IAC3C,CAAC;IACD,OAAO,WAAW,CAAC;AACrB,CAAC;AA9BD,wCA8BC;AAGD,kDAAkD;AAClD,wCAAwC;AACxC,kHAAkH","sourcesContent":["import { Queue } from \"bullmq\";\nimport { logger } from \"../lib/logger\";\nimport IORedis from \"ioredis\";\n\nlet scrapeQueue: Queue;\n\nexport const redisConnection = new IORedis(process.env.REDIS_URL!, {\n  maxRetriesPerRequest: null,\n});\n\nexport const scrapeQueueName = \"{scrapeQueue}\";\n\nexport function getScrapeQueue() {\n  if (!scrapeQueue) {\n    scrapeQueue = new Queue(\n      scrapeQueueName,\n      {\n        connection: redisConnection,\n        defaultJobOptions: {\n          removeOnComplete: {\n            age: 90000, // 25 hours\n          },\n          removeOnFail: {\n            age: 90000, // 25 hours\n          },\n        },\n      }\n      //   {\n      //   settings: {\n      //     lockDuration: 1 * 60 * 1000, // 1 minute in milliseconds,\n      //     lockRenewTime: 15 * 1000, // 15 seconds in milliseconds\n      //     stalledInterval: 30 * 1000,\n      //     maxStalledCount: 10,\n      //   },\n      //   defaultJobOptions:{\n      //     attempts: 5\n      //   }\n      // }\n    );\n    logger.info(\"Web scraper queue created\");\n  }\n  return scrapeQueue;\n}\n\n\n// === REMOVED IN FAVOR OF POLLING -- NOT RELIABLE\n// import { QueueEvents } from 'bullmq';\n// export const scrapeQueueEvents = new QueueEvents(scrapeQueueName, { connection: redisConnection.duplicate() });"]}